{"version":3,"sources":["constants.js","DataSource.js","Emoji.js","color.js","Rank.js","Ranks.js","Button.js","SimpleSortRankedTeams.js","rankBy.js","URLSearchParamsSchema.js","getBaseURL.js","SimpleSort.js","EquationEditor.js","App.js","serviceWorker.js","index.js","getCorrectTeamName.js"],"names":["ASCENDING","DESCENDING","ORDER_ARROW","_ORDER_ARROW","Object","defineProperty","ORDER_LABEL","_ORDER_LABEL","CATEGORY_OFFENSE","CATEGORY_DEFENSE","CATEGORY_SPECIAL","CATEGORY_OVERALL","CATEGORY_OTHER","CATEGORIES","assertNonNull","name","value","TypeError","concat","assertEnum","allowable","includes","JSON","stringify","assertCallable","fn","DataSource","_ref","key","_ref$description","description","_ref$category","category","_ref$defaultOrder","defaultOrder","_ref$defaultValue","defaultValue","_ref$render","render","String","_ref$process","process","classCallCheck","this","assign","constructor","data","GeneratedDataSource","FetchDataSource","options","_this","possibleConstructorReturn","getPrototypeOf","call","relativePath","season","_ref2","url","getURL","fetch","response","ok","text","txt","parse","console","error","_context3","t0","statusText","getRender","dataType","Math","trunc","round","toFixed","NCAAStatDataSource","slug","toLowerCase","replace","objectSpread","camelCase","teams","ranks","sortBy","values","forTeam","mapValues","mapKeys","team","getCorrectTeamName","rank","indexOf","FBS_TEAMS","NCAA_STATS","map","opts","DATA_SOURCES","fromPairs","num","random","decimals","sort","_","weights","Number","n","Infinity","window","Intl","NumberFormat","format","toConsumableArray","forEach","source","index","findIndex","s","Error","Emoji","emoji","label","length","react_default","a","createElement","role","aria-label","luminance","hex","parts","slice","hexString","parseInt","hex2rgb","channel","pow","Rank","children","school","mascot","logos","colors","color","alt_color","darkestColor","minBy","src","alt","loading","className","style","Ranks","headers","classnames","Ranks--full-width","columns","Button","onClick","props","objectWithoutProperties","type","SimpleSortRankedTeams","stats","toggleStatOrder","order","src_Button","_ref3","teamIndex","teamStats","score","previousTeam","firstStat","get","needsATiebreaker","_ref4","statIndex","stat","isTieBreaker","isMostSignificantStat","isInsignificant","Stat--most-significant","Stat--insignificant","shallowCopy","obj","rankBy","factors","result","orderBy","factor","isEqual","URLSearchParamsSchema","schema","searchParams","urlSearchParams","URLSearchParams","spec","isArray","Array","hydrator","getAll","decode","URL","search","object","_i","_Object$entries","entries","slicedToArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","append","err","return","toString","encode","other","getBaseURL","paramsAndHashLength","hash","href","SOURCES_BY_CATEGORY","groupBy","HeavyButton","Factor","disabled","onClickAddRemoveButton","buttonContent","onClickOrderToggle","OrderToggle","SimpleSort_HeavyButton","title","ListHeader","_ref5","toggleOrderForFactorByKey","toggleOrder","SelectedFactors","_ref6","setFactors","SimpleSort_Factor","filter","f","find","AvailableDataSources","_ref7","addFactors","_useState","useState","_useState2","setSearch","isSearching","trim","_useState3","_useState4","showAll","setShowAll","_useState5","_useState6","categoryExpanded","setCategoryExpanded","categories","useMemo","_ref8","_ref9","sources","FuzzySearch","factorKeys","Set","_ref10","placeholder","onChange","event","target","margin","checked","_ref11","categoryIndex","_ref12","SimpleSort_ListHeader","expanded","has","searchParamsSchema","system","factorFromURLString","startsWith","factorToURLString","DEFAULT_FACTORS","math","create","all","INITIAL_EQUATION","CODE_FONT_FAMILY","CodeEditor","code","setCode","Fragment","lib_default","onValueChange","highlight","languages","js","padding","fontFamily","fontSize","border","message","EquationEditorRankedTeams","rest","isSubset","subset","superset","difference","equation","RANKING_SYSTEMS","id","Component","_ref13","teamsWithFactors","initialFactors","decodeURL","document","location","useEffect","useCallback","rankedTeams","display","src_Emoji","initialEquation","setEquation","desiredSources","match","variable","Boolean","desiredSourceKeys","availableFactorKeys","_useMemo2","expression","compile","evaluate","makeScoringFn","_useMemo3","scoreFn","MATH_JS","EquationEditor_CodeEditor","RANKING_SYSTEMS_BY_ID","keyBy","TAGLINE","sample","getQueryParam","param","arguments","NOW","Date","CURRENT_SEASON","getFullYear","getMonth","SEASONS","range","initialDataSources","App","setSeason","setTeams","then","_useReducer","useReducer","state","action","_useReducer2","dataSources","dispatch","_fetchSources","asyncToGenerator","regenerator_default","mark","_callee2","teamNames","selectedSources","wrap","_context2","prev","keys","_callee","dataSource","_context","abrupt","sent","stop","_x","apply","fetchSources","some","_useState7","_useState8","rankingSystem","setRankingSystem","SystemComp","float","reverse","year","Select--selected","uniqBy","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","Army West Point","Coastal Caro.","FIU","Fla. Atlantic","Ga. Southern","Hawaii","La.-Monroe","Massachusetts","Miami (FL)","Middle Tenn.","Northern Ill.","San Jose St.","South Fla.","Southern California","Southern Miss.","UConn","UTSA","Western Ky."],"mappings":"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","file":"static/js/main.5e23a7fd.chunk.js","sourcesContent":["export const ASCENDING = \"asc\";\nexport const DESCENDING = \"desc\";\n\nexport const ORDER_ARROW = {\n  [ASCENDING]: \"▲\",\n  [DESCENDING]: \"▼\"\n};\nexport const ORDER_LABEL = {\n  [ASCENDING]: \"ascending\",\n  [DESCENDING]: \"descending\"\n};\n","import sortBy from \"lodash/sortBy\";\nimport mapValues from \"lodash/mapValues\";\nimport mapKeys from \"lodash/mapKeys\";\nimport camelCase from \"lodash/camelCase\";\nimport fromPairs from \"lodash/fromPairs\";\nimport getCorrectTeamName from \"./getCorrectTeamName\";\nimport { ASCENDING, DESCENDING } from \"./constants\";\n\nconst CATEGORY_OFFENSE = \"Offense\";\nconst CATEGORY_DEFENSE = \"Defense\";\nconst CATEGORY_SPECIAL = \"Special Teams\";\nconst CATEGORY_OVERALL = \"Overall\";\nconst CATEGORY_OTHER = \"Other\";\n\nexport const CATEGORIES = [\n  CATEGORY_OVERALL,\n  CATEGORY_OFFENSE,\n  CATEGORY_DEFENSE,\n  CATEGORY_SPECIAL,\n  CATEGORY_OTHER\n];\n\nconst assertNonNull = (name, value) => {\n  if (value == null) {\n    throw new TypeError(`A null-ish value was provided for ${name}`);\n  }\n};\n\nconst assertEnum = (name, value, allowable) => {\n  if (!allowable.includes(value)) {\n    throw new TypeError(`${name} must be one of ${JSON.stringify(allowable)}`);\n  }\n};\n\nconst assertCallable = (name, fn) => {\n  if (typeof fn !== \"function\") {\n    throw new TypeError(`${name} must be a function`);\n  }\n};\n\nclass DataSource {\n  constructor({\n    name,\n    key,\n    description = \"\",\n    category = CATEGORY_OTHER,\n    defaultOrder = \"desc\",\n    defaultValue = 0,\n    render = String,\n    process = null\n  }) {\n    assertNonNull(\"name\", name);\n    assertNonNull(\"key\", key);\n    assertNonNull(\"description\", description);\n    assertEnum(\"category\", category, CATEGORIES);\n    assertEnum(\"defaultOrder\", defaultOrder, [ASCENDING, DESCENDING]);\n    assertNonNull(\"defaultValue\", defaultValue);\n    assertCallable(\"render\", render);\n    Object.assign(this, {\n      name,\n      key,\n      description,\n      category,\n      defaultOrder,\n      defaultValue,\n      render\n    });\n    if (process) {\n      assertCallable(\"process\", process);\n      this.process = process;\n    }\n  }\n  async fetch() {\n    throw new TypeError(`${this.constructor.name} must implement \\`fetch\\``);\n  }\n  process(data) {\n    return data;\n  }\n}\n\nclass GeneratedDataSource extends DataSource {\n  async fetch() {\n    return null;\n  }\n}\n\nclass FetchDataSource extends DataSource {\n  constructor(options) {\n    super(options);\n    this.relativePath = options.relativePath;\n  }\n  getURL({ season }) {\n    return `/data/${season}/${this.relativePath}`;\n  }\n  async fetch(options) {\n    const url = this.getURL(options);\n    const response = await fetch(url);\n    if (response.ok) {\n      try {\n        const txt = await response.text();\n        return JSON.parse(txt);\n      } catch (error) {\n        console.error(error, url);\n        return {};\n      }\n    } else {\n      console.error(response.statusText, url);\n      return {};\n    }\n  }\n}\n\nfunction getRender(dataType) {\n  switch (dataType) {\n    case \"time\":\n      return value => `${Math.trunc(value)}:${Math.round((value % 1) * 60)}`;\n    case \"percent\":\n      return value => `${(value * 100).toFixed(2)}%`;\n\n    default:\n      return undefined;\n  }\n}\n\nclass NCAAStatDataSource extends FetchDataSource {\n  constructor(options) {\n    const slug =\n      options.slug || options.name.toLowerCase().replace(/[^a-z0-9]/g, \"-\");\n\n    super({\n      ...options,\n      key: options.key || camelCase(slug),\n      relativePath: `ncaa-stats/${slug}.json`,\n      render: getRender(options.dataType)\n    });\n  }\n  process(data, teams) {\n    const ranks = sortBy(Object.values(data));\n\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(\n        mapKeys(data, (value, team) => getCorrectTeamName(team)),\n        value => ({\n          value,\n          rank: ranks.indexOf(value)\n        })\n      )\n    };\n  }\n}\n\nexport const FBS_TEAMS = new FetchDataSource({\n  name: \"All FBS teams\",\n  key: \"fbsTeams\",\n  relativePath: \"fbs-teams.json\",\n  defaultValue: {}\n});\n\nconst NCAA_STATS = [\n  { name: \"3rd Down Conversion Pct\", category: CATEGORY_OFFENSE },\n  { name: \"3rd Down Conversion Pct Defense\", category: CATEGORY_DEFENSE },\n  { name: \"4th Down Conversion Pct\", category: CATEGORY_OFFENSE },\n  { name: \"4th Down Conversion Pct Defense\", category: CATEGORY_DEFENSE },\n  { name: \"Blocked Kicks\", category: CATEGORY_SPECIAL },\n  {\n    name: \"Blocked Kicks Allowed\",\n    category: CATEGORY_SPECIAL,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Blocked Punts\", category: CATEGORY_SPECIAL },\n  {\n    name: \"Blocked Punts Allowed\",\n    category: CATEGORY_SPECIAL,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Completion Percentage\", category: CATEGORY_OFFENSE },\n  { name: \"Defensive TDs\", category: CATEGORY_DEFENSE },\n  { name: \"Fewest Penalties\", category: CATEGORY_OVERALL, defaultOrder: \"asc\" },\n  {\n    name: \"Fewest Penalties Per Game\",\n    category: CATEGORY_OVERALL,\n    defaultOrder: \"asc\"\n  },\n  {\n    name: \"Fewest Penalty Yards\",\n    category: CATEGORY_OVERALL,\n    defaultOrder: \"asc\"\n  },\n  {\n    name: \"Fewest Penalty Yards Per Game\",\n    category: CATEGORY_OVERALL,\n    defaultOrder: \"asc\"\n  },\n  {\n    name: \"First Downs Defense\",\n    category: CATEGORY_DEFENSE,\n    defaultOrder: \"asc\"\n  },\n  { name: \"First Downs Offense\", category: CATEGORY_OFFENSE },\n  { name: \"Fumbles Lost\", category: CATEGORY_OVERALL, defaultOrder: \"asc\" },\n  { name: \"Fumbles Recovered\", category: CATEGORY_OVERALL },\n  {\n    name: \"Kickoff Return Defense\",\n    category: CATEGORY_DEFENSE,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Kickoff Returns\", category: CATEGORY_SPECIAL },\n  { name: \"Net Punting\", category: CATEGORY_SPECIAL },\n  {\n    name: \"Passes Had Intercepted\",\n    category: CATEGORY_OFFENSE,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Passes Intercepted\", category: CATEGORY_DEFENSE },\n  { name: \"Passing Offense\", category: CATEGORY_OFFENSE },\n  {\n    name: \"Passing Yards Allowed\",\n    category: CATEGORY_DEFENSE,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Passing Yards per Completion\", category: CATEGORY_OFFENSE },\n  {\n    name: \"Punt Return Defense\",\n    category: CATEGORY_DEFENSE,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Punt Returns\", category: CATEGORY_SPECIAL },\n  { name: \"Red Zone Defense\", category: CATEGORY_DEFENSE, defaultOrder: \"asc\" },\n  { name: \"Red Zone Offense\", category: CATEGORY_OFFENSE },\n  { name: \"Rushing Defense\", category: CATEGORY_DEFENSE, defaultOrder: \"asc\" },\n  { name: \"Rushing Offense\", category: CATEGORY_OFFENSE },\n  { name: \"Sacks Allowed\", category: CATEGORY_OFFENSE, defaultOrder: \"asc\" },\n  { name: \"Scoring Defense\", category: CATEGORY_DEFENSE, defaultOrder: \"asc\" },\n  { name: \"Scoring Offense\", category: CATEGORY_OFFENSE },\n  {\n    name: \"Tackles for Loss Allowed\",\n    category: CATEGORY_OFFENSE,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Team Passing Efficiency\", category: CATEGORY_OFFENSE },\n  {\n    name: \"Team Passing Efficiency Defense\",\n    category: CATEGORY_DEFENSE,\n    defaultOrder: \"asc\"\n  },\n  { name: \"Team Sacks\", category: CATEGORY_DEFENSE },\n  { name: \"Team Tackles for Loss\", category: CATEGORY_DEFENSE },\n  { name: \"Time of Possession\", category: CATEGORY_OFFENSE, dataType: \"time\" },\n  { name: \"Total Defense\", category: CATEGORY_DEFENSE, defaultOrder: \"asc\" },\n  { name: \"Total Offense\", category: CATEGORY_OFFENSE },\n  { name: \"Turnover Margin\", category: CATEGORY_OVERALL },\n  { name: \"Turnovers Gained\", category: CATEGORY_OVERALL },\n  { name: \"Turnovers Lost\", category: CATEGORY_OVERALL, defaultOrder: \"asc\" },\n  {\n    name: \"Winning Percentage\",\n    key: \"winPercentage\",\n    category: CATEGORY_OVERALL,\n    dataType: \"percent\"\n  },\n  { name: \"Wins\", category: CATEGORY_OVERALL, slug: \"wins\" },\n  {\n    name: \"Losses\",\n    category: CATEGORY_OVERALL,\n    slug: \"losses\",\n    defaultOrder: \"asc\"\n  },\n  {\n    name: \"Ties\",\n    category: CATEGORY_OVERALL,\n    slug: \"ties\",\n    defaultOrder: \"asc\"\n  },\n  { name: \"Games Played\", category: CATEGORY_OVERALL, slug: \"games-played\" }\n].map(opts => new NCAAStatDataSource(opts));\n\nconst quantize = (num, decimals) => {\n  return Math.round(num * (1 / decimals)) / (1 / decimals);\n};\n\nconst RANDOM = new GeneratedDataSource({\n  name: \"Random\",\n  key: \"random\",\n  description:\n    \"Each team is given a random score, randomized on every page refresh\",\n\n  process(data, teams) {\n    const values = fromPairs(\n      teams.map(team => [team, quantize(Math.random(), 0.0001)])\n    );\n    const ranks = Object.values(values).sort();\n\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(values, (_, key) => ({\n        value: values[key],\n        rank: ranks.indexOf(values[key]) + 1\n      }))\n    };\n  }\n});\n\nconst MASCOT_WEIGHTS = new FetchDataSource({\n  name: \"Mascot weight (lbs.)\",\n  key: \"mascotWeight\",\n  description:\n    \"Per Jon Bois and SBNation https://www.youtube.com/watch?v=obtRtrk42a8\",\n  relativePath: \"mascot-weights.json\",\n  defaultValue: 0,\n  process(data) {\n    // parse `\"Infinity\"`\n    const weights = mapValues(data, Number);\n    const ranks = sortBy(Object.values(weights), n => -n);\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(weights, value => ({\n        value,\n        rank: ranks.indexOf(value) + 1\n      }))\n    };\n  },\n  render(value) {\n    switch (value) {\n      case Infinity:\n      case -Infinity:\n        return \"Unknowable\";\n\n      case 0:\n        return \"?\";\n\n      default:\n        return window.Intl && Intl.NumberFormat\n          ? new Intl.NumberFormat().format(value)\n          : String(value);\n    }\n  }\n});\n\nconst TALENT = new FetchDataSource({\n  name: \"Talent\",\n  key: \"talent\",\n  description: \"Team talent composite\",\n  relativePath: \"talent.json\",\n  process(data, teams) {\n    const values = fromPairs(teams.map(team => [team, data[team]]));\n    const ranks = Object.values(values).sort();\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(values, value => ({\n        value,\n        rank: ranks.indexOf(value) + 1\n      }))\n    };\n  }\n});\n\nconst STRENGTH_OF_SCHEDULE = new FetchDataSource({\n  name: \"Strength of schedule\",\n  key: \"sos\",\n  description:\n    \"Combined record of each team's opponents, excluding games against that team\",\n  category: CATEGORY_OVERALL,\n  relativePath: \"strength-of-schedule.json\",\n  process(data, teams) {\n    const values = fromPairs(teams.map(team => [team, data[team]]));\n    const ranks = Object.values(values).sort();\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(values, value => ({\n        value,\n        rank: ranks.indexOf(value) + 1\n      }))\n    };\n  }\n});\n\nconst OPPONENT_WINNING_PERCENTAGE = new FetchDataSource({\n  name: \"Opponent winning percentage\",\n  key: \"opponentWinPercentage\",\n  description: \"Combined record of each team's opponents\",\n  category: CATEGORY_OVERALL,\n  relativePath: \"opponent-winning-percentage.json\",\n  process(data, teams) {\n    const values = fromPairs(teams.map(team => [team, data[team]]));\n    const ranks = Object.values(values).sort();\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(values, value => ({\n        value,\n        rank: ranks.indexOf(value) + 1\n      }))\n    };\n  }\n});\n\nconst CONF_WIN_PERCENTAGE_OOC = new FetchDataSource({\n  name: \"Conference OOC Win Percentage\",\n  key: \"oocConfWinPercentage\",\n  description:\n    \"The combined out-of-conference winning percentage for each team's conference. \" +\n    \"Useful as an approximation of relative conference strength. \" +\n    \"For independent teams their own winning percentage is reported.\",\n  relativePath: \"ooc-conference-winning-percentage-by-team.json\",\n  render: getRender(\"percent\"),\n  process(data, teams) {\n    const values = fromPairs(teams.map(team => [team, data[team]]));\n    const ranks = Object.values(values).sort();\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(values, value => ({\n        value,\n        rank: ranks.indexOf(value) + 1\n      }))\n    };\n  }\n});\n\nconst GAMES_REMAINING = new FetchDataSource({\n  name: \"Games Remaining\",\n  key: \"gamesRemaining\",\n  category: CATEGORY_OVERALL,\n  description:\n    \"The number of games remaining. \" +\n    \"Useful for projecting stats out to the end of the season.\",\n  relativePath: \"games-remaining.json\",\n  process(data, teams) {\n    const values = fromPairs(teams.map(team => [team, data[team]]));\n    const ranks = Object.values(values).sort();\n    return {\n      defaultValue: this.defaultValue,\n      forTeam: mapValues(values, value => ({\n        value,\n        rank: ranks.indexOf(value) + 1\n      }))\n    };\n  }\n});\n\nexport const DATA_SOURCES = [\n  RANDOM,\n  MASCOT_WEIGHTS,\n  TALENT,\n  STRENGTH_OF_SCHEDULE,\n  OPPONENT_WINNING_PERCENTAGE,\n  CONF_WIN_PERCENTAGE_OOC,\n  GAMES_REMAINING,\n  ...NCAA_STATS\n];\n\nDATA_SOURCES.forEach((source, index) => {\n  if (DATA_SOURCES.findIndex(s => s.key === source.key) !== index) {\n    throw new Error(`${source.key} is used twice`);\n  }\n});\n","import React from \"react\";\n\nconst Emoji = ({ emoji, label }) => {\n  if (typeof label !== \"string\" || label.length === 0)\n    throw new TypeError(\n      \"<Emoji /> requires a human-readable label for accessibility\"\n    );\n  return (\n    <span role=\"img\" aria-label={label}>\n      {emoji}\n    </span>\n  );\n};\n\nexport default Emoji;\n","function hex2rgb(hex) {\n  return [hex.slice(1, 3), hex.slice(3, 5), hex.slice(5, 7)].map(hexString =>\n    parseInt(hexString, 16)\n  );\n}\n\nexport function luminance(hex) {\n  var parts = hex2rgb(hex).map(channel => {\n    channel /= 255;\n    return channel <= 0.03928\n      ? channel / 12.92\n      : Math.pow((channel + 0.055) / 1.055, 2.4);\n  });\n  return parts[0] * 0.2126 + parts[1] * 0.7152 + parts[2] * 0.0722;\n}\n\nexport function contrast(hex1, hex2) {\n  return (luminance(hex1) + 0.05) / (luminance(hex2) + 0.05);\n}\n","import React from \"react\";\nimport minBy from \"lodash/minBy\";\nimport { luminance } from \"./color\";\n\nexport default function Rank({ team, rank, children }) {\n  const { school, mascot, logos, color, alt_color } = team;\n\n  const colors = [color || \"#000000\", alt_color || \"#ffffff\"];\n  const darkestColor = minBy(colors, luminance);\n\n  return (\n    <tr>\n      <td>{rank}</td>\n      <td>\n        <img src={logos[0]} alt=\"\" loading=\"lazy\" />\n        {school}{\" \"}\n        <span className=\"Rank-mascot-name\" style={{ color: darkestColor }}>\n          {mascot}\n        </span>\n      </td>\n      {children}\n    </tr>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport Rank from \"./Rank\";\n\nexport default function Ranks({ headers, teams }) {\n  return (\n    <div\n      className={classnames(\"Ranks\", {\n        \"Ranks--full-width\": headers.length > 1\n      })}\n    >\n      <table className=\"Ranks--table\">\n        <thead>\n          <tr>\n            <th>Rank</th>\n            <th>Team</th>\n            {headers}\n          </tr>\n        </thead>\n        <tbody>\n          {teams.map(({ team, rank, columns }) => (\n            <Rank key={team.school} team={team} rank={rank}>\n              {columns}\n            </Rank>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nconst Button = ({ className, onClick, children, ...props }) => (\n  <button\n    className={classnames(\"Button\", className)}\n    type=\"button\"\n    onClick={onClick}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport get from \"lodash/get\";\nimport Ranks from \"./Ranks\";\nimport { ORDER_ARROW } from \"./constants\";\nimport Button from \"./Button\";\n\nexport default function SimpleSortRankedTeams({\n  teams,\n  stats,\n  toggleStatOrder\n}) {\n  return (\n    <Ranks\n      headers={stats.map(({ key, name, order }) => (\n        <th key={key}>\n          <Button onClick={() => toggleStatOrder(key)}>\n            {name}&nbsp;{ORDER_ARROW[order]}\n          </Button>\n        </th>\n      ))}\n      teams={teams.map(({ team, rank, score, ...teamStats }, teamIndex) => {\n        const previousTeam = teamIndex !== 0 && teams[teamIndex - 1];\n\n        const firstStat = get(stats, [0, \"key\"]);\n        let needsATiebreaker =\n          !!firstStat &&\n          !!previousTeam &&\n          teamStats[firstStat] === previousTeam[firstStat];\n\n        return {\n          team,\n          rank,\n          columns: stats.map(({ key, render }, statIndex) => {\n            const stat = teamStats[key];\n\n            const isTieBreaker = needsATiebreaker && stat !== previousTeam[key];\n            if (isTieBreaker) {\n              needsATiebreaker = false;\n            }\n            const isMostSignificantStat =\n              ((teamIndex === 0 || !needsATiebreaker) && statIndex === 0) ||\n              isTieBreaker;\n            const isInsignificant =\n              statIndex === 0 || isTieBreaker || needsATiebreaker;\n            return (\n              <td\n                key={key}\n                className={classnames({\n                  \"Stat--most-significant\": isMostSignificantStat,\n                  \"Stat--insignificant\": isInsignificant\n                })}\n              >\n                {render(stat)}\n              </td>\n            );\n          })\n        };\n      })}\n    />\n  );\n}\n","import orderBy from \"lodash/orderBy\";\nimport isEqual from \"lodash/isEqual\";\n\nconst shallowCopy = obj => ({ ...obj });\n\nexport default function rankBy(teams, factors) {\n  const result = orderBy(\n    teams,\n    factors.map(factor => factor.key),\n    factors.map(factor => factor.order)\n  ).map(shallowCopy);\n  result.forEach((team, index) => {\n    team.score = factors.map(factor =>\n      factor.key.call ? factor.key(team) : team[factor.key]\n    );\n    const previousTeam = result[index - 1];\n    const rank =\n      index > 0 && isEqual(team.score, previousTeam.score)\n        ? previousTeam.rank\n        : index + 1;\n    team.rank = rank;\n  });\n  return result;\n}\n","import mapValues from \"lodash/mapValues\";\n\nexport function decode(searchParams, schema) {\n  const urlSearchParams = new URLSearchParams(searchParams);\n  return mapValues(schema, (spec, key) => {\n    const isArray = Array.isArray(spec);\n    const hydrator = isArray ? spec[0] : spec;\n\n    if (isArray) {\n      return urlSearchParams.getAll(key).map(hydrator);\n    }\n\n    const value = urlSearchParams.get(key);\n    if (value == null) return null;\n    return hydrator(value);\n  });\n}\n\nexport function encode(obj, schema) {\n  const searchParams = new URLSearchParams();\n  for (const [key, spec] of Object.entries(schema)) {\n    const value = obj[key];\n    const isArray = Array.isArray(spec);\n\n    // Skip empty values\n    if ((isArray && value.length === 0) || value == null) continue;\n\n    const values = isArray ? value.map(String) : [String(value)];\n    for (const value of values) searchParams.append(key, value);\n  }\n  return searchParams.toString();\n}\n\nexport default class URLSearchParamsSchema {\n  constructor(schema) {\n    this.schema = schema;\n  }\n  decode(searchParams) {\n    return decode(searchParams, this.schema);\n  }\n  decodeURL(url) {\n    return this.decode(new URL(url).search);\n  }\n  encode(object) {\n    return encode(object, this.schema);\n  }\n  merge(other) {\n    return new URLSearchParamsSchema({\n      ...this.schema,\n      ...other.schema\n    });\n  }\n}\n","export default function getBaseURL(url) {\n  const paramsAndHashLength = url.search.length + url.hash.length;\n  return url.href.slice(0, -paramsAndHashLength);\n}\n","import sortBy from \"lodash/sortBy\";\nimport groupBy from \"lodash/groupBy\";\nimport React, { useMemo, useEffect, useState, useCallback } from \"react\";\nimport FuzzySearch from \"fuzzy-search\";\nimport classnames from \"classnames\";\n\nimport Emoji from \"./Emoji\";\nimport { DATA_SOURCES, CATEGORIES } from \"./DataSource\";\nimport SimpleSortRankedTeams from \"./SimpleSortRankedTeams\";\nimport rankBy from \"./rankBy\";\nimport { ASCENDING, DESCENDING, ORDER_ARROW, ORDER_LABEL } from \"./constants\";\nimport Button from \"./Button\";\nimport URLSearchParamsSchema from \"./URLSearchParamsSchema\";\nimport getBaseURL from \"./getBaseURL\";\n\nconst SOURCES_BY_CATEGORY = sortBy(\n  Object.entries(groupBy(DATA_SOURCES, source => source.category)),\n  ([category]) => CATEGORIES.indexOf(category)\n);\n\nconst HeavyButton = ({ className, ...props }) => (\n  <Button className={classnames(\"Button-heavy\", className)} {...props} />\n);\n\nconst Factor = ({\n  name,\n  order,\n  disabled,\n  onClickAddRemoveButton,\n  buttonContent,\n  onClickOrderToggle,\n  children\n}) => {\n  const OrderToggle = onClickOrderToggle ? Button : \"span\";\n  return (\n    <li className=\"Factor\">\n      <HeavyButton disabled={disabled} onClick={onClickAddRemoveButton}>\n        {buttonContent}\n      </HeavyButton>\n      <span className=\"Factor--name\">{name}</span>&nbsp;\n      <OrderToggle\n        className=\"Factor--order-indicator\"\n        title={`By default, this will be sorted in ${ORDER_LABEL[order]} order. You can change this later.`}\n        onClick={onClickOrderToggle}\n      >\n        {ORDER_ARROW[order]}\n      </OrderToggle>\n      <br />\n      <div className=\"Factor--children\">{children}</div>\n    </li>\n  );\n};\n\nconst ListHeader = ({ children }) => <h3 className=\"ListHeader\">{children}</h3>;\n\nconst toggleOrder = factor => ({\n  ...factor,\n  order: factor.order === ASCENDING ? DESCENDING : ASCENDING\n});\n\nconst toggleOrderForFactorByKey = (factors, key) =>\n  factors.map(factor => (factor.key === key ? toggleOrder(factor) : factor));\n\nfunction SelectedFactors({ factors, setFactors }) {\n  return (\n    <div className=\"SelectedFactors\">\n      <h3>Selected stats</h3>\n      <ol>\n        {factors.map(factor => (\n          <Factor\n            key={factor.key}\n            disabled={factors.length <= 1}\n            onClickAddRemoveButton={() =>\n              setFactors(factors.filter(f => f.key !== factor.key))\n            }\n            onClickOrderToggle={() =>\n              setFactors(toggleOrderForFactorByKey(factors, factor.key))\n            }\n            buttonContent={\n              <span role=\"img\" aria-label=\"hide\">\n                ➖\n              </span>\n            }\n            name={DATA_SOURCES.find(source => source.key === factor.key).name}\n            order={factor.order}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n}\n\nfunction AvailableDataSources({ factors, addFactors }) {\n  const [search, setSearch] = useState(\"\");\n  const isSearching = search.trim() !== \"\";\n\n  const [showAll, setShowAll] = useState(false);\n\n  const [categoryExpanded, setCategoryExpanded] = useState(\n    SOURCES_BY_CATEGORY.map(() => true)\n  );\n\n  const categories = useMemo(\n    () =>\n      isSearching\n        ? SOURCES_BY_CATEGORY.map(([category, sources]) => {\n            let filteredSources = new FuzzySearch(sources, [\n              \"name\",\n              \"key\",\n              \"description\"\n            ]).search(search);\n\n            return [category, filteredSources];\n          })\n        : SOURCES_BY_CATEGORY,\n    [isSearching, search]\n  );\n\n  const factorKeys = useMemo(() => new Set(factors.map(({ key }) => key)), [\n    factors\n  ]);\n\n  return (\n    <div className=\"AvailableDataSources\">\n      <h3>Available stats</h3>\n      <input\n        type=\"search\"\n        placeholder=\"Search\"\n        className=\"Typeahead\"\n        value={search}\n        onChange={event => setSearch(event.target.value)}\n      />\n      <label>\n        <input\n          style={{ margin: \"0 1em\" }}\n          checked={showAll}\n          onChange={event => setShowAll(event.target.checked)}\n          type=\"checkbox\"\n        />\n        Show all\n      </label>\n      <ul>\n        {(showAll || isSearching) &&\n          categories.map(([category, sources], categoryIndex) => (\n            <li key={category}>\n              <ListHeader>\n                {category}\n                <Button\n                  className=\"ListHeader--disclosure-triangle\"\n                  onClick={() =>\n                    setCategoryExpanded(\n                      categoryExpanded.map((expanded, index) =>\n                        index === categoryIndex ? !expanded : expanded\n                      )\n                    )\n                  }\n                >\n                  {categoryExpanded[categoryIndex] ? (\n                    <span role=\"img\" aria-label=\"hide\">\n                      ➖\n                    </span>\n                  ) : (\n                    <span role=\"img\" aria-label=\"show\">\n                      ➕\n                    </span>\n                  )}\n                </Button>\n              </ListHeader>\n              {categoryExpanded[categoryIndex] && (\n                <ul>\n                  {sources.map(source => {\n                    const disabled = factorKeys.has(source.key);\n                    return (\n                      <Factor\n                        key={source.key}\n                        disabled={disabled}\n                        onClickAddRemoveButton={() =>\n                          addFactors([\n                            {\n                              key: source.key,\n                              order: source.defaultOrder\n                            }\n                          ])\n                        }\n                        buttonContent={\n                          <span\n                            title={\n                              disabled\n                                ? \"You cannot use the same stat more than once to sort teams. That doesn't even make sense.\"\n                                : undefined\n                            }\n                            role=\"img\"\n                            aria-label=\"add\"\n                          >\n                            ➕\n                          </span>\n                        }\n                        name={source.name}\n                        order={source.defaultOrder}\n                      >\n                        {source.description}\n                      </Factor>\n                    );\n                  })}\n                </ul>\n              )}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nconst searchParamsSchema = new URLSearchParamsSchema({\n  system: String,\n  factors: Array(String)\n});\n\nfunction factorFromURLString(factor) {\n  return {\n    key: factor.replace(/^[+-]/, \"\"),\n    order: factor.startsWith(\"-\") ? DESCENDING : ASCENDING\n  };\n}\n\nfunction factorToURLString(factor) {\n  return `${factor.order === DESCENDING ? \"-\" : \"\"}${factor.key}`;\n}\n\nconst DEFAULT_FACTORS = [\"-winPercentage\", \"-mascotWeight\"];\nexport default function SimpleSort({\n  factors,\n  setFactors,\n  addFactors,\n  teams: teamsWithFactors\n}) {\n  const { factors: initialFactors } = useMemo(\n    () => searchParamsSchema.decodeURL(document.location),\n    []\n  );\n\n  useEffect(() => {\n    setFactors(\n      (initialFactors.length ? initialFactors : DEFAULT_FACTORS).map(\n        factorFromURLString\n      )\n    );\n  }, [initialFactors, setFactors]);\n\n  const toggleStatOrder = useCallback(\n    key => setFactors(toggleOrderForFactorByKey(factors, key)),\n    [factors, setFactors]\n  );\n\n  // Teams ranked by the selected factors\n  const rankedTeams = rankBy(teamsWithFactors, factors);\n  const stats = factors.map(factor => {\n    const source = DATA_SOURCES.find(source => source.key === factor.key);\n    return {\n      key: factor.key,\n      name: source.name,\n      order: factor.order,\n      render: value => source.render(value)\n    };\n  });\n  return (\n    <>\n      <p>The easiest way to build your own computer poll.</p>\n      <p>\n        Select one or more of the following stats. Teams will be sorted by each\n        stat, using the next stat as a tie-breaker if needed.\n      </p>\n\n      <SelectedFactors factors={factors} setFactors={setFactors} />\n\n      <p style={{ display: \"none\" }}>\n        <a\n          href={`${getBaseURL(document.location)}?${searchParamsSchema.encode({\n            system: \"simple-sort\",\n            factors: factors.map(factorToURLString)\n          })}`}\n          // eslint-disable-next-line react/jsx-no-target-blank\n          target=\"_blank\"\n        >\n          Share <Emoji emoji=\"🔗\" label=\"link\" />\n        </a>\n      </p>\n\n      <AvailableDataSources\n        factors={factors}\n        addFactors={addFactors}\n        setFactors={setFactors}\n      />\n\n      <SimpleSortRankedTeams\n        teams={rankedTeams}\n        stats={stats}\n        toggleStatOrder={toggleStatOrder}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport difference from \"lodash/difference\";\nimport { create, all } from \"mathjs/number\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\n\nimport Emoji from \"./Emoji\";\nimport { DATA_SOURCES } from \"./DataSource\";\nimport rankBy from \"./rankBy\";\nimport Ranks from \"./Ranks\";\nimport { DESCENDING } from \"./constants\";\nimport getBaseURL from \"./getBaseURL\";\nimport URLSearchParamsSchema from \"./URLSearchParamsSchema\";\n\nconst math = create(all);\n\nfunction makeScoringFn(expression) {\n  const node = math.parse(expression);\n  const code = node.compile();\n  return team => code.evaluate(team);\n}\n\nconst INITIAL_EQUATION =\n  \"100 * (totalOffense / (totalOffense + totalDefense)) * winPercentage / PI\";\n\nconst CODE_FONT_FAMILY =\n  '\"Fira code\", \"Fira Mono\", Inconsolata, Menlo, monospace';\n\nconst CodeEditor = ({ code, setCode, error }) => (\n  <>\n    <Editor\n      value={code}\n      onValueChange={setCode}\n      highlight={code => highlight(code, languages.js)}\n      padding={10}\n      style={{\n        fontFamily: CODE_FONT_FAMILY,\n        fontSize: 12,\n        border: \"1px solid grey\"\n      }}\n    />\n    {error && (\n      <p style={{ color: \"red\" }}>\n        Uh oh! <code>{error.message}</code>\n      </p>\n    )}\n  </>\n);\n\nconst render = !!(window.Intl && Intl.NumberFormat)\n  ? new Intl.NumberFormat().format\n  : value => value.toFixed(3);\n\nfunction EquationEditorRankedTeams({ teams }) {\n  return (\n    <Ranks\n      headers={<th>Score</th>}\n      teams={teams.map(({ score, ...rest }) => ({\n        ...rest,\n        columns: <td title={String(score[0])}>{render(score)}</td>\n      }))}\n    />\n  );\n}\n\nconst isSubset = (subset, superset) =>\n  difference(subset, superset).length === 0;\n\nconst searchParamsSchema = new URLSearchParamsSchema({\n  system: String,\n  equation: String\n});\n\nexport default function EquationEditor({ factors, addFactors, teams }) {\n  const { equation: initialEquation } = useMemo(\n    () => searchParamsSchema.decodeURL(document.location),\n    []\n  );\n\n  const [equation, setEquation] = useState(initialEquation || INITIAL_EQUATION);\n\n  // All the references in the equation that are valid sources\n  const desiredSources = useMemo(() => {\n    // All named references in the equation\n    const variables = [...new Set(equation.match(/[A-Za-z]+/g))];\n    return variables\n      .map(variable => DATA_SOURCES.find(source => source.key === variable))\n      .filter(Boolean);\n  }, [equation]);\n\n  useEffect(() => {\n    const desiredSourceKeys = desiredSources.map(({ key }) => key);\n    const availableFactorKeys = factors.map(({ key }) => key);\n\n    // Early-out if we already are aware of all dependencies\n    if (isSubset(desiredSourceKeys, availableFactorKeys)) return;\n\n    addFactors(\n      desiredSources.map(source => ({\n        key: source.key,\n        order: source.defaultOrder\n      }))\n    );\n  }, [addFactors, desiredSources, factors]);\n\n  // Check scoreFn for potential errors before trying to render a list\n  const [scoreFn, error] = useMemo(() => {\n    try {\n      const fn = makeScoringFn(equation);\n      fn(teams[0]);\n      return [fn, null];\n    } catch (error) {\n      // If there's a problem, produce a \"default\" score function\n      return [() => null, error];\n    }\n  }, [equation, teams]);\n\n  // Teams ranked by the given equation\n  const rankedTeams = useMemo(\n    () => rankBy(teams, [{ key: scoreFn, order: DESCENDING }]),\n    [scoreFn, teams]\n  );\n\n  // Avoid janky autoformatting\n  const MATH_JS = (\n    <a href=\"https://mathjs.org/docs/expressions/syntax.html\">\n      <code>math.js</code>\n    </a>\n  );\n  return (\n    <>\n      <p>Do some math!</p>\n      <p>\n        You can write whatever {MATH_JS} code you want here. Any available data\n        source that you reference will be automatically downloaded.\n      </p>\n\n      <p>Currently loaded data sources:</p>\n      <ol>\n        {factors.map(factor => (\n          <li key={factor.key}>\n            {DATA_SOURCES.find(source => source.key === factor.key).name} (\n            <code style={{ fontFamily: CODE_FONT_FAMILY }}>{factor.key}</code>)\n          </li>\n        ))}\n      </ol>\n\n      <p style={{ display: \"none\" }}>\n        <a\n          href={`${getBaseURL(document.location)}?${searchParamsSchema.encode({\n            system: \"equation\",\n            equation\n          })}`}\n          // eslint-disable-next-line react/jsx-no-target-blank\n          target=\"_blank\"\n        >\n          Share <Emoji emoji=\"🔗\" label=\"link\" />\n        </a>\n      </p>\n\n      <CodeEditor code={equation} setCode={setEquation} error={error} />\n\n      <EquationEditorRankedTeams teams={rankedTeams} />\n    </>\n  );\n}\n","import fromPairs from \"lodash/fromPairs\";\nimport uniqBy from \"lodash/uniqBy\";\nimport sample from \"lodash/sample\";\nimport get from \"lodash/get\";\nimport keyBy from \"lodash/keyBy\";\nimport range from \"lodash/range\";\nimport React, { useState, useEffect, useMemo, useReducer } from \"react\";\nimport classnames from \"classnames\";\n\nimport { FBS_TEAMS, DATA_SOURCES } from \"./DataSource\";\nimport SimpleSort from \"./SimpleSort\";\nimport EquationEditor from \"./EquationEditor\";\nimport \"./App.css\";\nimport URLSearchParamsSchema from \"./URLSearchParamsSchema\";\n\nconst EloPlaceholder = () => <p>Coming soon.</p>;\n\nconst RANKING_SYSTEMS = [\n  { id: \"simple-sort\", name: \"Simple sort\", Component: SimpleSort },\n  { id: \"equation\", name: \"Score\", Component: EquationEditor },\n  { id: \"elo\", name: \"Elo\", Component: EloPlaceholder }\n];\nconst RANKING_SYSTEMS_BY_ID = keyBy(RANKING_SYSTEMS, \"id\");\n\nconst TAGLINE = sample([\n  \"Bring Your Own Bias\",\n  \"Bring your own bias\",\n  \"Computers ain't played nobody, PAAAWWWWLLLLLL!\",\n  \"Shut up, nerd\",\n  \"I bet you can't make a ranking worse than the CFP\",\n  \"Finally, a ranking worse than the CFP\",\n  \"Proving once and for all that computers hate your team\"\n]);\n\nconst searchParamsSchema = new URLSearchParamsSchema({\n  system: String,\n  season: Number\n});\n\nconst getQueryParam = (param, defaultValue = null) =>\n  searchParamsSchema.decodeURL(document.location)[param] || defaultValue;\n\nconst NOW = new Date();\nconst FIRST_SEASON = 2018;\nconst CURRENT_SEASON =\n  // Last year if we're currently in the first half of this year\n  NOW.getFullYear() + (NOW.getMonth() <= 6 ? -1 : 0);\nconst SEASONS = range(FIRST_SEASON, CURRENT_SEASON + 1);\n\nconst initialDataSources = fromPairs(\n  DATA_SOURCES.map(source => [\n    source.key,\n    { loading: false, error: null, data: null }\n  ])\n);\n\nfunction App() {\n  const [season, setSeason] = useState(getQueryParam(\"season\", CURRENT_SEASON));\n\n  // All FBS teams\n  const [teams, setTeams] = useState(null);\n  useEffect(() => {\n    FBS_TEAMS.fetch({ season })\n      .then(data => FBS_TEAMS.process(data))\n      .then(data => setTeams(data));\n  }, [season]);\n\n  // Selected data points for sorting\n  const [factors, setFactors] = useState([]);\n  const addFactors = f => setFactors(uniqBy([...factors, ...f], \"key\"));\n\n  // Available data points\n  const [dataSources, dispatch] = useReducer((state, action) => {\n    const key = get(action, \"source.key\", null);\n\n    switch (action.type) {\n      case \"fetching\":\n        return {\n          ...state,\n          [key]: {\n            ...(state[key] || {}),\n            loading: true,\n            error: null,\n            data: null\n          }\n        };\n\n      case \"fetched\":\n        return {\n          ...state,\n          [key]: {\n            ...(state[key] || {}),\n            loading: false,\n            error: null,\n            data: action.data\n          }\n        };\n\n      case \"failed\":\n        return {\n          ...state,\n          [key]: {\n            ...(state[key] || {}),\n            loading: false,\n            error: action.error,\n            data: null\n          }\n        };\n\n      default:\n        return state;\n    }\n  }, initialDataSources);\n\n  useEffect(() => {\n    async function fetchSources() {\n      const teamNames = Object.keys(teams);\n      const selectedSources = factors.map(factor => factor.key);\n\n      const desiredDataSources = DATA_SOURCES.filter(source =>\n        selectedSources.includes(source.key)\n      );\n      desiredDataSources.forEach(async source => {\n        const dataSource = dataSources[source.key];\n        if (dataSource.loading || dataSource.data != null) return;\n\n        dispatch({ type: \"fetching\", source });\n        try {\n          const data = await source.fetch({ season });\n          dispatch({\n            type: \"fetched\",\n            source,\n            data: source.process(data, teamNames)\n          });\n        } catch (error) {\n          dispatch({ type: \"failed\", source, error });\n        }\n      });\n    }\n\n    if (teams != null) fetchSources();\n  }, [dataSources, factors, season, teams]);\n\n  // Teams with data points mixed in\n  const teamsWithFactors = useMemo(() => {\n    // Early-out if we don't have all the data we need yet\n    if (!teams || factors.some(factor => dataSources[factor.key] == null))\n      return [];\n\n    return Object.values(teams).map(team => ({\n      team,\n      ...fromPairs(\n        factors.map(factor => [\n          factor.key,\n          get(\n            dataSources,\n            [factor.key, \"data\", \"forTeam\", team.school, \"value\"],\n            dataSources[factor.key].defaultValue\n          )\n        ])\n      )\n    }));\n  }, [teams, dataSources, factors]);\n\n  const [rankingSystem, setRankingSystem] = useState(\n    getQueryParam(\"system\", \"\")\n  );\n\n  const SystemComp = get(\n    RANKING_SYSTEMS_BY_ID,\n    [rankingSystem, \"Component\"],\n    () => null\n  );\n\n  return (\n    <>\n      <header>\n        <h1>rankings.computer</h1>\n        <small>{TAGLINE}</small>\n      </header>\n      <main>\n        <label style={{ float: \"right\" }}>\n          Season{\" \"}\n          <select\n            value={season}\n            onChange={event => setSeason(Number(event.target.value))}\n          >\n            {[...SEASONS].reverse().map(year => (\n              <option key={year} value={year}>\n                {year}-{year + 1}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <h2>Build your own computer ranking</h2>\n        <label>Choose your ranking system:</label>\n\n        <div>\n          {RANKING_SYSTEMS.map(({ id, name }) => (\n            <label\n              key={id}\n              className={classnames(\"Select Select--ranking-system\", {\n                \"Select--selected\": id === rankingSystem\n              })}\n            >\n              <input\n                key={id}\n                onChange={event => setRankingSystem(event.target.value)}\n                type=\"radio\"\n                value={id}\n                checked={id === rankingSystem}\n              />\n              {name}\n            </label>\n          ))}\n        </div>\n\n        <SystemComp\n          factors={factors}\n          setFactors={setFactors}\n          addFactors={addFactors}\n          teams={teamsWithFactors}\n        />\n      </main>\n      <footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Remap team names from those reported by stats.ncaa.org to those reported by collegefootballdata.com\nmodule.exports = team =>\n  ({\n    \"Army West Point\": \"Army\",\n    \"Coastal Caro.\": \"Coastal Carolina\",\n    FIU: \"Florida International\",\n    \"Fla. Atlantic\": \"Florida Atlantic\",\n    \"Ga. Southern\": \"Georgia Southern\",\n    Hawaii: \"Hawai'i\",\n    \"La.-Monroe\": \"Louisiana Monroe\",\n    Massachusetts: \"UMass\",\n    \"Miami (FL)\": \"Miami\",\n    \"Middle Tenn.\": \"Middle Tennessee\",\n    \"Northern Ill.\": \"Northern Illinois\",\n    \"San Jose St.\": \"San José State\",\n    \"South Fla.\": \"South Florida\",\n    \"Southern California\": \"USC\",\n    \"Southern Miss.\": \"Southern Mississippi\",\n    UConn: \"Connecticut\",\n    UTSA: \"UT San Antonio\",\n    \"Western Ky.\": \"Western Kentucky\"\n  }[team] || team.replace(\"St.\", \"State\").replace(\"Mich.\", \"Michigan\"));\n"],"sourceRoot":""}